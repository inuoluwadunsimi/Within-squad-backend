openapi: 3.0.0
info:
  title: Within API Docs
  version: 1.0.0
  description: API docs for within
paths:
  /user/auth/signup:
    post:
      summary: "endpoint for signup"
      tags:
        - onboarding
        - authentication
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupRequest"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        "400":
          description: "error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /user/auth/login:
    post:
      summary: "login endpoint"
      tags:
        - authentication
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: "error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /user/me:
    parameters:
      - $ref: "#/components/parameters/AuthToken"
    get:
      tags :
        - user
      responses:
        200:
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      #spaces
  /spaces/space/{spaceId}:
    parameters:
      - $ref: "#/components/parameters/AuthToken"
    post:
      summary:  "endpoint to create a space"
      tags:
        - space
      operationId: createSpace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSpace"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponse"
        "400":
          description: "error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
       operationId: getsingleSpace
       parameters:
         - $ref : "#/components/parameters/SpaceID"
       responses:
         "200":
           description: "success"
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/Space"
         "400":
          description: "error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spaces/space/join:
    parameters:
      - $ref: '#/components/parameters/AuthToken'
      - $ref: '#/components/parameters/SpaceCode'
    post:
      tags:
        - spaces
      operationId: joinSpace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JoinSpaceRequest"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponse"
        "400":
          description: "error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spaces/space/{spaceId}/leave:
    parameters:
      - $ref: "#/components/parameters/AuthToken"
      - $ref: "#/components/parameters/SpaceID"
    put:
      tags:
        - space
      operationId: leaveSpace
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponse"
        "400":
          description: "error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"






  /spaces:
    parameters:
      - $ref: '#/components/parameters/AuthToken'
    get:
      operationId: getAllSpaces
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllSpacesRequest"
        "400":
          description: "error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spaces/space/{spaceId}/payment/{paymentId}:
    parameters:
      - $ref: "#/components/parameters/SpaceID"
      - $ref: "#/components/parameters/AuthToken"
    post:
      tags:
        - payment
        - spaces
      operationId: createPayment
      summary: "endpoint to create a payment"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePaymentRequest"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponse"
        "400":
          description: "error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      operationId: getAPayment
      summary: "endpoint to get a single payment"
      parameters:
        - $ref: "#/components/parameters/PaymentID"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "400":
          description: "error"
          content:
            application.json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spaces/space/{spaceId}/payment/{paymentId}/pay:
    parameters:
      - $ref: "#/components/parameters/SpaceID"
      - $ref: "#/components/parameters/PaymentID"
      - $ref: "#/components/parameters/AuthToken"
    post:
      tags:
        - payment
      operationId: makePayment
      summary: "endpoint to make payment for item"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MakePaymentResponse"
        "400":
          description: "error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /spaces/space/{spaceId}/payment/{paymentId}/paid:
    parameters:
      - $ref: "#/components/parameters/SpaceID"
      - $ref: "#/components/parameters/PaymentID"
      - $ref: "#/components/parameters/AuthToken"
    get:
      operationId: getAllMembersthathavepaid
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"


  /spaces/space/{spaceId}/payment:
    parameters:
      - $ref: "#/components/parameters/SpaceID"
      - $ref: "#/components/parameters/AuthToken"
    get:
      operationId: getAllPayments
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Payment"
        "403":
          description: "error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /spaces/space/{spaceId}/payment/wallet:
    parameters:
      - $ref: "#/components/parameters/AuthToken"
      - $ref: "#/components/parameters/SpaceID"
    get:
      tags:
        - space
        - wallet
        - payment
      operationId: getWalletDetails
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wallet"

  /spaces/space/{spaceId}/payment/wallet/transactions:
    parameters:
      - $ref: "#/components/parameters/SpaceID"
      - $ref: "#/components/parameters/AuthToken"
    get:
      tags:
        - space
        - wallet
      operationId: getTransactions
      responses:
        "200":
          description: "sucess"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WalletTransactions"
  /spaces/space/{spaceId}/payment/wallet/accountName:
    parameters:
      - $ref: "#/components/parameters/SpaceID"
      - $ref: "#/components/parameters/AuthToken"
    post:
      tags:
        - wallet
        - payment
        - withdraw
      operationId: requstAccountName
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAccountNameRequest"
      responses:
        200:
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountNameResponse"
  /spaces/space/{spaceId}/announcements:
    parameters:
      - $ref: "#/components/parameters/SpaceID"
      - $ref: "#/components/parameters/AuthToken"
    post:
      tags:
        - space
        - announcement
      operationId: makeAnnouncment
      requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MakeAnnouncement"
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultResponse"
    get:
      tags:
        - space
        - announcement
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Announcement"







components:
  parameters:
    AuthToken:
      name: x-auth-token
      in: header
      schema:
        type: string
      required: true
    SpaceID:
      name: spaceId
      in: path
      schema:
        type: string
        format: uuid
      required: true
    DueDate:
      name: dueDate
      in: query
      schema:
        type: string
        format: date-time
      required: false

    PaymentID:
      name: paymentId
      in: path
      schema:
        type: string
        format: uuid
      required: true
    SpaceCode:
      name: spaceCode
      in: query
      schema:
        type: string
      required: false
  schemas:
    SignupRequest:
      type: object
      required:
        - email
        - fullName
        - password
      properties:
        email:
          type: string
        fullName:
          type: string
        regNo:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        department:
          type: string
        level:
          type: string
        password:
          type: string
          format: password
          pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$'
        expoToken:
          type: string
    ErrorResponse:
      title: DefaultResponse
      type: object
      properties:
        error:
          type: string
        message:
          type: string
      required:
        - message
    DefaultResponse:
      title: DefaultResponse
      type: object
      properties:
        message:
          type: string
      required:
        - message
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        fullName:
          type: string
        regNo:
          type: string
        dateOfBirth:
          type: string
        department:
          type: string
        level:
          type: string
    TokenResponse:
      title: TokenResponse
      type: object
      properties:
        token:
          type: string
    AuthResponse:
      title: AuthResponse
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
        token:
          $ref: "#/components/schemas/TokenResponse"
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
          format: password
    CreateSpace:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
        profileImage:
          type: string
        description:
          type: string
    Space:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        profileImage:
          type: string
        description:
          type: string
        spaceCode:
          type: string
        owner:
          $ref: "#/components/schemas/User"
        members:
          type: array
          items:
            $ref: '#/components/schemas/User'
    AllSpacesRequest:
      type: object
      properties:
        mySpaces:
          type: array
          items:
            $ref: "#/components/schemas/Space"
        memberSpaces:
          type: array
          items:
            $ref: "#/components/schemas/Space"
    JoinSpaceRequest:
      type: object
      properties:
        spaceCodeInput:
          type: string
    CreatePaymentRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        amount:
          type: number
        dueDate:
          type: string
          format: date-time
    Payment:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        amount:
          type: number
        space:
          type: string
          format: uuid
    MakePaymentResponse:
      type: object
      properties:
        paymentLink:
          type: string
        name:
          type: string
        amount:
          type: number

    Wallet:
      type: object
      properties:
        id:
          type: string
        space:
          type: string
        available_balance:
          type: number
        pending_balance:
          type: number
        lock_withdrawals:
          type: number

    WalletTransactions:
      type: object
      properties:
        clerkType:
          type: string
        amount:
          type: string
        reason:
          type: string

    Otp:
      type: string

    MakeAnnouncement:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
    Announcement:
      type: object
      properties:
        id:
          type: string
        space:
          type: string
        title:
          type: string
    GetAccountNameRequest:
      type: object
      properties:
        bank_name:
          type: string;
        account_number:
          type: string
    AccountNameResponse:
      type: object
      properties:
        bank_name:
          type: string;
        account_name:
          type: string
        bank_code:
          type: string






















